{"remainingRequest":"/home/garnnet/Crone-master/node_modules/babel-loader/lib/index.js!/home/garnnet/Crone-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/garnnet/Crone-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/garnnet/Crone-master/node_modules/mdbvue/src/components/Advanced/ToastNotification.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/garnnet/Crone-master/node_modules/mdbvue/src/components/Advanced/ToastNotification.vue","mtime":499162500000},{"path":"/home/garnnet/Crone-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/garnnet/Crone-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/garnnet/Crone-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/garnnet/Crone-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZGF0ZS50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIudGltZXJzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IG1kYkJ0biBmcm9tICIuLi9Db21wb25lbnRzL0J1dHRvbiI7CmltcG9ydCBtZGJJY29uIGZyb20gIi4uL0NvbnRlbnQvRmEiOwp2YXIgVG9hc3ROb3RpZmljYXRpb24gPSB7CiAgbmFtZTogJ05vdGlmaWNhdGlvbicsCiAgY29tcG9uZW50czogewogICAgbWRiQnRuOiBtZGJCdG4sCiAgICBtZGJJY29uOiBtZGJJY29uCiAgfSwKICBwcm9wczogewogICAgdGltZTogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICAiZGVmYXVsdCI6IHRydWUKICAgIH0sCiAgICBzaG93OiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgICJkZWZhdWx0IjogZmFsc2UKICAgIH0sCiAgICBtZXNzYWdlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgImRlZmF1bHQiOiAnJwogICAgfSwKICAgIHRpdGxlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgImRlZmF1bHQiOiAnJwogICAgfSwKICAgIGljb246IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICAiZGVmYXVsdCI6ICJzcXVhcmUiCiAgICB9LAogICAgaWNvblNpemU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICAiZGVmYXVsdCI6ICdsZycKICAgIH0sCiAgICBpY29uQ29sb3I6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICAiZGVmYXVsdCI6ICdwcmltYXJ5JwogICAgfSwKICAgIHJlY2VpdmVkOiBEYXRlCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY3VycmVudFRpbWU6ICcnLAogICAgICBzdGFydFRpbWU6ICcnLAogICAgICBzaG93Tm90aWZpY2F0aW9uOiB0aGlzLnNob3csCiAgICAgIGludGVydmFsOiBudWxsCiAgICB9OwogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIHNob3dpbmc6IHsKICAgICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuc2hvd05vdGlmaWNhdGlvbjsKICAgICAgfSwKICAgICAgc2V0OiBmdW5jdGlvbiBzZXQobmV3VmFsKSB7CiAgICAgICAgdGhpcy5zaG93Tm90aWZpY2F0aW9uID0gbmV3VmFsOwogICAgICB9CiAgICB9LAogICAgY2FsY3VsYXRlZFRpbWU6IGZ1bmN0aW9uIGNhbGN1bGF0ZWRUaW1lKCkgewogICAgICB2YXIgdGltZSA9ICh0aGlzLmN1cnJlbnRUaW1lIC0gdGhpcy5zdGFydFRpbWUpIC8gMTAwMDsKICAgICAgcmV0dXJuIHRoaXMuZm9ybWF0VGltZSh0aW1lKTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIHVwZGF0ZVRpbWU6IGZ1bmN0aW9uIHVwZGF0ZVRpbWUoKSB7CiAgICAgIHRoaXMuY3VycmVudFRpbWUgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTsKICAgIH0sCiAgICBmb3JtYXRUaW1lOiBmdW5jdGlvbiBmb3JtYXRUaW1lKHRpbWUpIHsKICAgICAgc3dpdGNoICh0cnVlKSB7CiAgICAgICAgY2FzZSB0aW1lIDwgNjA6CiAgICAgICAgICByZXR1cm4gIm5vdyI7CgogICAgICAgIGNhc2UgdGltZSA8IDM2MDA6CiAgICAgICAgICB2YXIgbWludXRlcyA9IE1hdGguZmxvb3IodGltZSAvIDYwKTsKICAgICAgICAgIHJldHVybiAiIi5jb25jYXQobWludXRlcywgIiBtaW4gYWdvIik7CgogICAgICAgIGNhc2UgdGltZSA+PSAzNjAwICYmIHRpbWUgPCA4NjQwMDoKICAgICAgICAgIHZhciBob3VycyA9IE1hdGguZmxvb3IodGltZSAvIDM2MDApOwogICAgICAgICAgcmV0dXJuICIiLmNvbmNhdChob3VycywgIiBoIGFnbyIpOwoKICAgICAgICBjYXNlIHRpbWUgPj0gODY0MDA6CiAgICAgICAgICB2YXIgZGF5cyA9IE1hdGguZmxvb3IodGltZSAvIDg2NDAwKTsKICAgICAgICAgIHJldHVybiAiIi5jb25jYXQoZGF5cywgIiBkIGFnbyIpOwogICAgICB9CiAgICB9LAogICAgY2xvc2VUb2FzdDogZnVuY3Rpb24gY2xvc2VUb2FzdCgpIHsKICAgICAgdGhpcy5zaG93aW5nID0gZmFsc2U7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIHRpbWVSZWNlaXZlZCA9IHRoaXMucmVjZWl2ZWQgfHwgbmV3IERhdGUoKTsKICAgIHRoaXMuc3RhcnRUaW1lID0gdGltZVJlY2VpdmVkLmdldFRpbWUoKTsKICAgIHRoaXMuY3VycmVudFRpbWUgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTsKICAgIHRoaXMuaW50ZXJ2YWwgPSB3aW5kb3cuc2V0SW50ZXJ2YWwodGhpcy51cGRhdGVUaW1lLCA2MDAwMCk7CiAgfSwKICBiZWZvcmVEZXN0cm95OiBmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCkgewogICAgd2luZG93LmNsZWFySW50ZXJ2YWwodGhpcy5pbnRlcnZhbCk7CiAgfQp9OwpleHBvcnQgZGVmYXVsdCBUb2FzdE5vdGlmaWNhdGlvbjsKZXhwb3J0IHsgVG9hc3ROb3RpZmljYXRpb24gYXMgbWRiVG9hc3ROb3RpZmljYXRpb24gfTs="},{"version":3,"sources":["ToastNotification.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <transition enter-active-class=\"animated fadeIn\" leave-active-class=\"animated \">\n    <div v-if=\"showing\" class=\"toast\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\n      <div class=\"toast-header\">\n        <mdb-icon class=\"mr-2\" :icon=\"icon\" :color=\"iconColor\" :size=\"iconSize\"></mdb-icon>\n        <strong class=\"mr-auto\">{{title}}</strong>\n        <small v-if=\"time\" class=\"text-muted\">{{calculatedTime}}</small>\n        <button type=\"button\" class=\"ml-2 mb-1 close\" data-dismiss=\"toast\" aria-label=\"Close\" @click=\"closeToast\"><mdb-icon size=\"xs\" icon=\"times\"/></button>\n      </div>\n      <div class=\"toast-body\">\n        {{message}}\n      </div>\n    </div>\n  </transition>\n</template>\n\n\n<script>\nimport mdbBtn from '../Components/Button';\nimport mdbIcon from '../Content/Fa';\nconst ToastNotification = {\n  name: 'Notification',\n  components: {\n    mdbBtn,\n    mdbIcon\n  },\n  props: {\n    time: {\n      type: Boolean,\n      default: true\n    },\n    show: {\n      type: Boolean,\n      default: false\n    },\n    message: {\n      type: String,\n      default: ''\n    },\n    title: {\n      type: String,\n      default: ''\n    },\n    icon: {\n      type: String,\n      default: \"square\"\n    },\n    iconSize: {\n      type: String,\n      default: 'lg'\n    },\n    iconColor: {\n      type: String,\n      default: 'primary'\n    },\n    received: Date\n  },\n  data(){\n    return {\n      currentTime: '',\n      startTime: '',\n      showNotification: this.show,\n      interval: null\n    };\n  },\n  computed: {\n    showing: {\n      get() {\n        return this.showNotification;\n      },\n      set(newVal) {\n        this.showNotification = newVal;\n      }\n    },\n    calculatedTime(){\n      let time = (this.currentTime - this.startTime)/1000;\n      return this.formatTime(time);\n    }\n  },\n  methods: {\n    updateTime(){\n      this.currentTime = new Date().getTime();\n    },\n    formatTime(time){\n      switch (true) {\n        case time < 60:\n          return `now`;\n        case time < 3600:\n          let minutes = Math.floor(time / 60);\n          return `${minutes} min ago`;\n        case time >= 3600 && time < 86400:\n          let hours = Math.floor(time / 3600);\n          return `${hours} h ago`;\n        case time >= 86400:\n          let days = Math.floor(time / 86400);\n          return `${days} d ago`;\n      }\n    },\n    closeToast(){\n      this.showing = false;\n    },\n  },\n  mounted(){\n    let timeReceived = this.received || new Date();\n    this.startTime = timeReceived.getTime();\n    this.currentTime = new Date().getTime();\n    this.interval = window.setInterval(this.updateTime, 60000);\n  },\n  beforeDestroy(){\n    window.clearInterval(this.interval);\n  }\n};\n\nexport default ToastNotification;\nexport { ToastNotification as mdbToastNotification };\n</script>\n<style scoped>\n  .toast {\n    opacity: 1;\n  }\n  .text-muted {\n    padding-left: 10px;\n  }\n</style>\n"],"sourceRoot":"node_modules/mdbvue/src/components/Advanced"}]}