{"remainingRequest":"/home/garnnet/Crone-master/node_modules/babel-loader/lib/index.js!/home/garnnet/Crone-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/garnnet/Crone-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/garnnet/Crone-master/src/components/HelloWorld.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/garnnet/Crone-master/src/components/HelloWorld.vue","mtime":1572885096409},{"path":"/home/garnnet/Crone-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/garnnet/Crone-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/garnnet/Crone-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/garnnet/Crone-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgbWRiVGJsLCBtZGJUYmxIZWFkLCBtZGJUYmxCb2R5LCBtZGJNb2RhbCwgbWRiTW9kYWxIZWFkZXIsIG1kYk1vZGFsVGl0bGUsIG1kYk1vZGFsQm9keSwgbWRiTW9kYWxGb290ZXIsIG1kYkJ0biB9IGZyb20gJ21kYnZ1ZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnVGFibGVQYWdlJywKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgaW5mbzogW10sCiAgICAgIGluZm9CeUlkOiBbXSwKICAgICAgbW9kYWw6IGZhbHNlLAogICAgICB0eXBlOiAnJywKICAgICAgdGltZTogJycsCiAgICAgIGNvbW1hbmQ6ICcnLAogICAgICBzdGF0dXM6ICcnLAogICAgICBkZXNjcmlwdGlvbjogJycsCiAgICAgIGlkOiBudWxsCiAgICB9OwogIH0sCiAgY29tcG9uZW50czogewogICAgbWRiVGJsOiBtZGJUYmwsCiAgICBtZGJUYmxIZWFkOiBtZGJUYmxIZWFkLAogICAgbWRiVGJsQm9keTogbWRiVGJsQm9keSwKICAgIG1kYk1vZGFsOiBtZGJNb2RhbCwKICAgIG1kYk1vZGFsSGVhZGVyOiBtZGJNb2RhbEhlYWRlciwKICAgIG1kYk1vZGFsVGl0bGU6IG1kYk1vZGFsVGl0bGUsCiAgICBtZGJNb2RhbEJvZHk6IG1kYk1vZGFsQm9keSwKICAgIG1kYk1vZGFsRm9vdGVyOiBtZGJNb2RhbEZvb3RlciwKICAgIG1kYkJ0bjogbWRiQnRuCiAgfSwKICBjbGlja0xpc3Q6IGZ1bmN0aW9uIGNsaWNrTGlzdChwcm9kdWN0KSB7CiAgICBjb25zb2xlLmxvZygiY2xpY2tMaXN0IGZpcmVkIHdpdGggIiArIHByb2R1Y3QuaWQpOwogIH0sCiAgbWV0aG9kczogewogICAgZ2V0QWxsVGFza3M6IGZ1bmN0aW9uIGdldEFsbFRhc2tzKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgYXhpb3MuZ2V0KCdodHRwOi8vbG9jYWxob3N0OjgwODAvdGFza2FsbCcpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgcmV0dXJuIF90aGlzLmluZm8gPSByZXNwb25zZS5kYXRhOwogICAgICB9KTsKICAgIH0sCiAgICBnZXRBbGxUYXNLQnlJZDogZnVuY3Rpb24gZ2V0QWxsVGFzS0J5SWQoaWQpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB0aGlzLm1vZGFsID0gdHJ1ZTsKICAgICAgYXhpb3MuZ2V0KCdodHRwOi8vbG9jYWxob3N0OjgwODAvL3Rhc2tieWlkP3RJZD0nICsgaWQpLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgcmV0dXJuIF90aGlzMi5pbmZvQnlJZCA9IHJlc3BvbnNlLmRhdGE7CiAgICAgIH0pOwogICAgfSwKICAgIHBvcE1vZGFsOiBmdW5jdGlvbiBwb3BNb2RhbChvYmopIHsKICAgICAgdGhpcy5tb2RhbCA9IHRydWU7CiAgICAgIHRoaXMudHlwZSA9IG9iai50YXNrVHlwZTsKICAgICAgdGhpcy5jb21tYW5kID0gb2JqLmNtZDsKICAgICAgdGhpcy50aW1lID0gb2JqLnRhc2tUaW1lOwogICAgICB0aGlzLnN0YXR1cyA9IG9iai5hY3RpdmUsIHRoaXMuZGVzY3JpcHRpb24gPSBvYmoudGFza0Rlc2M7CiAgICAgIHRoaXMuaWQgPSBvYmoudElkOwogICAgfSwKICAgIGNyZWF0ZXRhc2s6IGZ1bmN0aW9uIGNyZWF0ZXRhc2soKSB7CiAgICAgIHRoaXMubW9kYWwgPSBmYWxzZTsKICAgICAgYXhpb3MucG9zdCgnaHR0cDovL2xvY2FsaG9zdDo4MDgwL2NyZWF0ZVRhc2snLCB7CiAgICAgICAgdElkOiB0aGlzLmlkLAogICAgICAgIHRhc2tEZXNjOiB0aGlzLmRlc2NyaXB0aW9uLAogICAgICAgIHRhc2tUeXBlOiB0aGlzLnR5cGUsCiAgICAgICAgY21kOiB0aGlzLmNvbW1hbmQsCiAgICAgICAgYWN0aXZlOiB0aGlzLnN0YXR1cywKICAgICAgICB0YXNrVGltZTogdGhpcy50aW1lCiAgICAgIH0pLnRoZW4odGhpcy5nZXRBbGxUYXNrcygpKTsKICAgIH0sCiAgICBkZWxldGVCeUlkOiBmdW5jdGlvbiBkZWxldGVCeUlkKGlkLCBpbmRleCkgewogICAgICBjb25zb2xlLmxvZyhpbmRleCk7CiAgICAgIGF4aW9zWyJkZWxldGUiXSgnaHR0cDovL2xvY2FsaG9zdDo4MDgwL2RlbGJ5aWQ/dElkPScgKyBpZCk7CiAgICAgIHRoaXMuaW5mby5zcGxpY2UoaW5kZXgsIDEpOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuZ2V0QWxsVGFza3MoKTsKICB9Cn07"},{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\n    <div>\n      \n      <mdb-tbl class=\"table table-responsive table-hover table-borderless table-striped\">\n        <mdb-tbl-head color=\"grey\">\n          <tr>\n            <th scope=\"col\">Task id</th>\n            <th scope=\"col\" >Task Name</th>\n            <th scope=\"col\">Task Time</th>\n            <th scope=\"col\">Task Type</th>\n            <th scope=\"col\">Action</th>\n          </tr>\n        </mdb-tbl-head>\n        <mdb-tbl-body>\n          \n          <tr :style=\"{ cursor: 'pointer'}\" v-for=\"(garnnet, index) in info\" :key=\"index\">\n            \n            <td >{{garnnet.tId}}</td>\n            <td >{{garnnet.taskDesc}}</td>\n            <td >{{garnnet.taskTime}}</td>\n            <td>{{garnnet.taskType}}</td>\n            <td> <mdb-btn v-on:click=\"deleteById(garnnet.tId, index)\" color=\"danger\" ><i class=\"fa fa-trash \"></i></mdb-btn><mdb-btn color=\"primary\" v-on:click=\"popModal(garnnet)\"><i class=\"fa fa-eye \"></i></mdb-btn> </td>\n          </tr>\n          \n          \n  \n        </mdb-tbl-body>\n      </mdb-tbl>\n      \n\n       \n      <mdb-modal :show=\"modal\" @close=\"modal = false\">\n      <mdb-modal-header>\n      <mdb-modal-title><label>Task Number: {{id}}</label></mdb-modal-title>\n      </mdb-modal-header>\n      <mdb-modal-body>\n       \n       \n            \n       \n        <br/>\n       <label>Task Description</label>\n        <input class=\"form-control form-control-sm\" type=\"text\" v-model=\"description\"> \n        <br/>\n        <label>Task Type</label>\n        <input class=\"form-control form-control-sm\" type=\"text\" v-model=\"type\"><br/>\n        <label>Task Time</label>\n        <input  class=\"form-control form-control-sm\" type=\"text\" v-model=\"time\"><br/>\n        <label>Command</label>\n        <input  class=\"form-control form-control-sm\" type=\"text\" v-model=\"command\"><br/>\n        <label>Status</label>\n        <input  class=\"form-control form-control-sm\" type=\"text\" v-model=\"status\"><br/>\n        \n        \n\n      </mdb-modal-body>\n      <mdb-modal-footer>\n      \n      <mdb-btn v-on:click=\"createtask()\" color=\"primary\">Save changes</mdb-btn>\n      </mdb-modal-footer>\n    </mdb-modal>\n\n      \n    </div>\n  </template>\n\n\n<script>\n  import { mdbTbl, mdbTblHead, mdbTblBody, mdbModal, mdbModalHeader, mdbModalTitle, mdbModalBody, mdbModalFooter, mdbBtn } from 'mdbvue';\n\n  export default {\n    name: 'TablePage',\n     data () {\n    return {\n      info: [],\n      infoById:[],\n      modal: false,\n      type : '',\n      time : '',\n      command : '',\n      status : '',\n      description : '',\n      id : null\n      \n    }\n  },\n    components: {\n      mdbTbl,\n      mdbTblHead,\n      mdbTblBody,\n      mdbModal,\n      mdbModalHeader,\n      mdbModalTitle,\n      mdbModalBody,\n      mdbModalFooter,\n      mdbBtn,\n    },\n    clickList: function (product) {\n    console.log(\"clickList fired with \" + product.id);\n    },\n    methods: {\n      getAllTasks(){\n        axios\n              .get('http://localhost:8080/taskall')\n              .then(response => (this.info = response.data))\n      },\n      getAllTasKById(id,){\n        \n        this.modal = true;\n        axios\n        .get('http://localhost:8080//taskbyid?tId=' +id)\n        .then(response => (this.infoById = response.data))\n\n      },\n      popModal(obj){\n        \n        this.modal = true;\n        this.type = obj.taskType;\n        this.command = obj.cmd;\n        this.time = obj.taskTime;\n        this.status = obj.active,\n        this.description = obj.taskDesc;\n        this.id = obj.tId;\n  \n      },\n    createtask(){\n      this.modal=false;\n    \n    axios.post('http://localhost:8080/createTask', {\n    \n    tId : this.id,\n    taskDesc : this.description,\n    taskType : this.type,\n    cmd : this. command,\n    active : this.status,\n    taskTime : this.time ,\n   \n      })\n      .then(\n        this.getAllTasks()\n        \n\n      )\n    },\n    \n    deleteById(id, index){\n        console.log(index)\n              \n        axios\n        .delete('http://localhost:8080/delbyid?tId=' +id)\n        \n         this.info.splice(index, 1)\n         \n      },\n            \n      \n    },\n    \n\n     mounted () {\n       this.getAllTasks();\n        \n  }\n}\n  \n\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n</style>\n"],"sourceRoot":"src/components"}]}