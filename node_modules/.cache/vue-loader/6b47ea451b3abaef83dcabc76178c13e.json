{"remainingRequest":"/home/garnnet/Crone-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/garnnet/Crone-master/src/components/HelloWorld.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/garnnet/Crone-master/src/components/HelloWorld.vue","mtime":1572884958905},{"path":"/home/garnnet/Crone-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/garnnet/Crone-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/garnnet/Crone-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/garnnet/Crone-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCiAgaW1wb3J0IHsgbWRiVGJsLCBtZGJUYmxIZWFkLCBtZGJUYmxCb2R5LCBtZGJNb2RhbCwgbWRiTW9kYWxIZWFkZXIsIG1kYk1vZGFsVGl0bGUsIG1kYk1vZGFsQm9keSwgbWRiTW9kYWxGb290ZXIsIG1kYkJ0biB9IGZyb20gJ21kYnZ1ZSc7CgogIGV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdUYWJsZVBhZ2UnLAogICAgIGRhdGEgKCkgewogICAgcmV0dXJuIHsKICAgICAgaW5mbzogW10sCiAgICAgIGluZm9CeUlkOltdLAogICAgICBtb2RhbDogZmFsc2UsCiAgICAgIHR5cGUgOiAnJywKICAgICAgdGltZSA6ICcnLAogICAgICBjb21tYW5kIDogJycsCiAgICAgIHN0YXR1cyA6ICcnLAogICAgICBkZXNjcmlwdGlvbiA6ICcnLAogICAgICBpZCA6IG51bGwKICAgICAgCiAgICB9CiAgfSwKICAgIGNvbXBvbmVudHM6IHsKICAgICAgbWRiVGJsLAogICAgICBtZGJUYmxIZWFkLAogICAgICBtZGJUYmxCb2R5LAogICAgICBtZGJNb2RhbCwKICAgICAgbWRiTW9kYWxIZWFkZXIsCiAgICAgIG1kYk1vZGFsVGl0bGUsCiAgICAgIG1kYk1vZGFsQm9keSwKICAgICAgbWRiTW9kYWxGb290ZXIsCiAgICAgIG1kYkJ0biwKICAgIH0sCiAgICBjbGlja0xpc3Q6IGZ1bmN0aW9uIChwcm9kdWN0KSB7CiAgICBjb25zb2xlLmxvZygiY2xpY2tMaXN0IGZpcmVkIHdpdGggIiArIHByb2R1Y3QuaWQpOwogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgZ2V0QWxsVGFza3MoKXsKICAgICAgICBheGlvcwogICAgICAgICAgICAgIC5nZXQoJ2h0dHA6Ly9sb2NhbGhvc3Q6ODA4MC90YXNrYWxsJykKICAgICAgICAgICAgICAudGhlbihyZXNwb25zZSA9PiAodGhpcy5pbmZvID0gcmVzcG9uc2UuZGF0YSkpCiAgICAgIH0sCiAgICAgIGdldEFsbFRhc0tCeUlkKGlkLCl7CiAgICAgICAgCiAgICAgICAgdGhpcy5tb2RhbCA9IHRydWU7CiAgICAgICAgYXhpb3MKICAgICAgICAuZ2V0KCdodHRwOi8vbG9jYWxob3N0OjgwODAvL3Rhc2tieWlkP3RJZD0nICtpZCkKICAgICAgICAudGhlbihyZXNwb25zZSA9PiAodGhpcy5pbmZvQnlJZCA9IHJlc3BvbnNlLmRhdGEpKQoKICAgICAgfSwKICAgICAgcG9wTW9kYWwob2JqKXsKICAgICAgICAKICAgICAgICB0aGlzLm1vZGFsID0gdHJ1ZTsKICAgICAgICB0aGlzLnR5cGUgPSBvYmoudGFza1R5cGU7CiAgICAgICAgdGhpcy5jb21tYW5kID0gb2JqLmNtZDsKICAgICAgICB0aGlzLnRpbWUgPSBvYmoudGFza1RpbWU7CiAgICAgICAgdGhpcy5zdGF0dXMgPSBvYmouYWN0aXZlLAogICAgICAgIHRoaXMuZGVzY3JpcHRpb24gPSBvYmoudGFza0Rlc2M7CiAgICAgICAgdGhpcy5pZCA9IG9iai50SWQ7CiAgCiAgICAgIH0sCiAgICBjcmVhdGV0YXNrKCl7CiAgICAKICAgIGF4aW9zLnBvc3QoJ2h0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9jcmVhdGVUYXNrJywgewogICAgCiAgICB0SWQgOiB0aGlzLmlkLAogICAgdGFza0Rlc2MgOiB0aGlzLmRlc2NyaXB0aW9uLAogICAgdGFza1R5cGUgOiB0aGlzLnR5cGUsCiAgICBjbWQgOiB0aGlzLiBjb21tYW5kLAogICAgYWN0aXZlIDogdGhpcy5zdGF0dXMsCiAgICB0YXNrVGltZSA6IHRoaXMudGltZSAsCiAgIAogICAgICB9KQogICAgICAudGhlbigKICAgICAgICB0aGlzLm1vZGFsID0gZmFsc2U7CgogICAgICApCiAgICB9LAogICAgCiAgICBkZWxldGVCeUlkKGlkLCBpbmRleCl7CiAgICAgICAgY29uc29sZS5sb2coaW5kZXgpCiAgICAgICAgICAgICAgCiAgICAgICAgYXhpb3MKICAgICAgICAuZGVsZXRlKCdodHRwOi8vbG9jYWxob3N0OjgwODAvZGVsYnlpZD90SWQ9JyAraWQpCiAgICAgICAgCiAgICAgICAgIHRoaXMuaW5mby5zcGxpY2UoaW5kZXgsIDEpCiAgICAgICAgIAogICAgICB9LAogICAgICAgICAgICAKICAgICAgCiAgICB9LAogICAgCgogICAgIG1vdW50ZWQgKCkgewogICAgICAgdGhpcy5nZXRBbGxUYXNrcygpOwogICAgICAgIAogIH0KfQogIAoK"},{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;;AAGA;;;AAGA;AACA;;AAEA;AACA","file":"HelloWorld.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\n    <div>\n      \n      <mdb-tbl class=\"table table-responsive table-hover table-borderless table-striped\">\n        <mdb-tbl-head color=\"grey\">\n          <tr>\n            <th scope=\"col\">Task id</th>\n            <th scope=\"col\" >Task Name</th>\n            <th scope=\"col\">Task Time</th>\n            <th scope=\"col\">Task Type</th>\n            <th scope=\"col\">Action</th>\n          </tr>\n        </mdb-tbl-head>\n        <mdb-tbl-body>\n          \n          <tr :style=\"{ cursor: 'pointer'}\" v-for=\"(garnnet, index) in info\" :key=\"index\">\n            \n            <td >{{garnnet.tId}}</td>\n            <td >{{garnnet.taskDesc}}</td>\n            <td >{{garnnet.taskTime}}</td>\n            <td>{{garnnet.taskType}}</td>\n            <td> <mdb-btn v-on:click=\"deleteById(garnnet.tId, index)\" color=\"danger\" ><i class=\"fa fa-trash \"></i></mdb-btn><mdb-btn color=\"primary\" v-on:click=\"popModal(garnnet)\"><i class=\"fa fa-eye \"></i></mdb-btn> </td>\n          </tr>\n          \n          \n  \n        </mdb-tbl-body>\n      </mdb-tbl>\n      \n\n       \n      <mdb-modal :show=\"modal\" @close=\"modal = false\">\n      <mdb-modal-header>\n      <mdb-modal-title><label>Task Number: {{id}}</label></mdb-modal-title>\n      </mdb-modal-header>\n      <mdb-modal-body>\n       \n       \n            \n       \n        <br/>\n       <label>Task Description</label>\n        <input class=\"form-control form-control-sm\" type=\"text\" v-model=\"description\"> \n        <br/>\n        <label>Task Type</label>\n        <input class=\"form-control form-control-sm\" type=\"text\" v-model=\"type\"><br/>\n        <label>Task Time</label>\n        <input  class=\"form-control form-control-sm\" type=\"text\" v-model=\"time\"><br/>\n        <label>Command</label>\n        <input  class=\"form-control form-control-sm\" type=\"text\" v-model=\"command\"><br/>\n        <label>Status</label>\n        <input  class=\"form-control form-control-sm\" type=\"text\" v-model=\"status\"><br/>\n        \n        \n\n      </mdb-modal-body>\n      <mdb-modal-footer>\n      \n      <mdb-btn v-on:click=\"createtask()\" color=\"primary\">Save changes</mdb-btn>\n      </mdb-modal-footer>\n    </mdb-modal>\n\n      \n    </div>\n  </template>\n\n\n<script>\n  import { mdbTbl, mdbTblHead, mdbTblBody, mdbModal, mdbModalHeader, mdbModalTitle, mdbModalBody, mdbModalFooter, mdbBtn } from 'mdbvue';\n\n  export default {\n    name: 'TablePage',\n     data () {\n    return {\n      info: [],\n      infoById:[],\n      modal: false,\n      type : '',\n      time : '',\n      command : '',\n      status : '',\n      description : '',\n      id : null\n      \n    }\n  },\n    components: {\n      mdbTbl,\n      mdbTblHead,\n      mdbTblBody,\n      mdbModal,\n      mdbModalHeader,\n      mdbModalTitle,\n      mdbModalBody,\n      mdbModalFooter,\n      mdbBtn,\n    },\n    clickList: function (product) {\n    console.log(\"clickList fired with \" + product.id);\n    },\n    methods: {\n      getAllTasks(){\n        axios\n              .get('http://localhost:8080/taskall')\n              .then(response => (this.info = response.data))\n      },\n      getAllTasKById(id,){\n        \n        this.modal = true;\n        axios\n        .get('http://localhost:8080//taskbyid?tId=' +id)\n        .then(response => (this.infoById = response.data))\n\n      },\n      popModal(obj){\n        \n        this.modal = true;\n        this.type = obj.taskType;\n        this.command = obj.cmd;\n        this.time = obj.taskTime;\n        this.status = obj.active,\n        this.description = obj.taskDesc;\n        this.id = obj.tId;\n  \n      },\n    createtask(){\n    \n    axios.post('http://localhost:8080/createTask', {\n    \n    tId : this.id,\n    taskDesc : this.description,\n    taskType : this.type,\n    cmd : this. command,\n    active : this.status,\n    taskTime : this.time ,\n   \n      })\n      .then(\n        this.modal = false;\n\n      )\n    },\n    \n    deleteById(id, index){\n        console.log(index)\n              \n        axios\n        .delete('http://localhost:8080/delbyid?tId=' +id)\n        \n         this.info.splice(index, 1)\n         \n      },\n            \n      \n    },\n    \n\n     mounted () {\n       this.getAllTasks();\n        \n  }\n}\n  \n\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n</style>\n"]}]}