{"remainingRequest":"/home/garnnet/Crone-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/garnnet/Crone-master/node_modules/mdbvue/src/components/Layout/Container.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/garnnet/Crone-master/node_modules/mdbvue/src/components/Layout/Container.vue","mtime":499162500000},{"path":"/home/garnnet/Crone-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/garnnet/Crone-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/garnnet/Crone-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/garnnet/Crone-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KCmltcG9ydCBjbGFzc05hbWVzIGZyb20gJ2NsYXNzbmFtZXMnOwppbXBvcnQgbWRiQ2xhc3NNaXhpbiBmcm9tICcuLi8uLi9taXhpbnMvbWRiQ2xhc3NNaXhpbic7Cgpjb25zdCBDb250YWluZXIgPSB7CiAgcHJvcHM6IHsKICAgIHRhZzogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICJkaXYiCiAgICB9LAogICAgZmx1aWQ6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCiAgICBmcmVlQmlyZDogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGNsYXNzTmFtZSgpIHsKICAgICAgcmV0dXJuIGNsYXNzTmFtZXMoCiAgICAgICAgdGhpcy5mbHVpZCA/ICdjb250YWluZXItZmx1aWQnIDogJ2NvbnRhaW5lcicsCiAgICAgICAgdGhpcy5mcmVlQmlyZCA/ICdmcmVlLWJpcmQnIDogJycsCiAgICAgICAgdGhpcy5tZGJDbGFzcwogICAgICApOwogICAgfQogIH0sCiAgbWl4aW5zOiBbbWRiQ2xhc3NNaXhpbl0KfTsKCmV4cG9ydCBkZWZhdWx0IENvbnRhaW5lcjsKZXhwb3J0IHsgQ29udGFpbmVyIGFzIG1kYkNvbnRhaW5lciB9Owo="},{"version":3,"sources":["Container.vue"],"names":[],"mappings":";;;;;AAKA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"Container.vue","sourceRoot":"node_modules/mdbvue/src/components/Layout","sourcesContent":["<template>\n  <component :is=\"tag\" :class=\"className\"><slot></slot></component>\n</template>\n\n<script>\nimport classNames from 'classnames';\nimport mdbClassMixin from '../../mixins/mdbClassMixin';\n\nconst Container = {\n  props: {\n    tag: {\n      type: String,\n      default: \"div\"\n    },\n    fluid: {\n      type: Boolean,\n      default: false\n    },\n    freeBird: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    className() {\n      return classNames(\n        this.fluid ? 'container-fluid' : 'container',\n        this.freeBird ? 'free-bird' : '',\n        this.mdbClass\n      );\n    }\n  },\n  mixins: [mdbClassMixin]\n};\n\nexport default Container;\nexport { Container as mdbContainer };\n</script>\n\n<style scoped>\n</style>\n\n"]}]}