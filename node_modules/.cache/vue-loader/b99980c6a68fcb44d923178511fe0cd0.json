{"remainingRequest":"/home/garnnet/Crone-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/garnnet/Crone-master/node_modules/mdbvue/src/components/Navigation/NavbarBrand.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/garnnet/Crone-master/node_modules/mdbvue/src/components/Navigation/NavbarBrand.vue","mtime":499162500000},{"path":"/home/garnnet/Crone-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/garnnet/Crone-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/garnnet/Crone-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/garnnet/Crone-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB3YXZlcyBmcm9tICcuLi8uLi9taXhpbnMvd2F2ZXMnOwoKY29uc3QgTmF2YmFyQnJhbmQgPSB7CiAgcHJvcHM6IHsKICAgIHRhZzogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICdkaXYnCiAgICB9LAogICAgdG86IFtTdHJpbmcsIE9iamVjdF0sCiAgICB3YXZlczogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICB9LAogIGNvbXB1dGVkOiB7CiAgICB3cmFwcGVyQ2xhc3MoKSB7CiAgICAgIHJldHVybiB0aGlzLndhdmVzICYmICdyaXBwbGUtcGFyZW50JzsKICAgIH0KICB9LAogIG1peGluczogW3dhdmVzXQp9OwoKZXhwb3J0IGRlZmF1bHQgTmF2YmFyQnJhbmQ7CmV4cG9ydCB7IE5hdmJhckJyYW5kIGFzIG1kYk5hdmJhckJyYW5kIH07Cg=="},{"version":3,"sources":["NavbarBrand.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"NavbarBrand.vue","sourceRoot":"node_modules/mdbvue/src/components/Navigation","sourcesContent":["<template>\n  <div :class=\"wrapperClass\" @click=\"wave\">\n    <router-link v-if=\"to\" :to=\"to\" v-bind=\"$attrs\" class=\"navbar-brand\" >\n      <slot></slot>\n    </router-link>\n    <component v-else :is=\"tag\" class=\"navbar-brand\" @click=\"wave\" v-bind=\"$attrs\">\n      <slot></slot>\n    </component>\n  </div>\n</template>\n\n<script>\nimport waves from '../../mixins/waves';\n\nconst NavbarBrand = {\n  props: {\n    tag: {\n      type: String,\n      default: 'div'\n    },\n    to: [String, Object],\n    waves: {\n      type: Boolean,\n      default: false\n    },\n  },\n  computed: {\n    wrapperClass() {\n      return this.waves && 'ripple-parent';\n    }\n  },\n  mixins: [waves]\n};\n\nexport default NavbarBrand;\nexport { NavbarBrand as mdbNavbarBrand };\n</script>\n\n<style scoped>\n\n</style>\n"]}]}