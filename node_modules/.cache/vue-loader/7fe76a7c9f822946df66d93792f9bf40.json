{"remainingRequest":"/home/garnnet/Crone-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/garnnet/Crone-master/src/components/HelloWorld.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/garnnet/Crone-master/src/components/HelloWorld.vue","mtime":1572878257289},{"path":"/home/garnnet/Crone-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/garnnet/Crone-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/garnnet/Crone-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/garnnet/Crone-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCiAgaW1wb3J0IHsgbWRiVGJsLCBtZGJUYmxIZWFkLCBtZGJUYmxCb2R5LCBtZGJNb2RhbCwgbWRiTW9kYWxIZWFkZXIsIG1kYk1vZGFsVGl0bGUsIG1kYk1vZGFsQm9keSwgbWRiTW9kYWxGb290ZXIsIG1kYkJ0biB9IGZyb20gJ21kYnZ1ZSc7CgogIGV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdUYWJsZVBhZ2UnLAogICAgIGRhdGEgKCkgewogICAgcmV0dXJuIHsKICAgICAgaW5mbzogW10sCiAgICAgIGluZm9CeUlkOltdLAogICAgICBtb2RhbDogZmFsc2UKICAgIH0KICB9LAogICAgY29tcG9uZW50czogewogICAgICBtZGJUYmwsCiAgICAgIG1kYlRibEhlYWQsCiAgICAgIG1kYlRibEJvZHksCiAgICAgIG1kYk1vZGFsLAogICAgICBtZGJNb2RhbEhlYWRlciwKICAgICAgbWRiTW9kYWxUaXRsZSwKICAgICAgbWRiTW9kYWxCb2R5LAogICAgICBtZGJNb2RhbEZvb3RlciwKICAgICAgbWRiQnRuLAogICAgfSwKICAgIGNsaWNrTGlzdDogZnVuY3Rpb24gKHByb2R1Y3QpIHsKICAgIGNvbnNvbGUubG9nKCJjbGlja0xpc3QgZmlyZWQgd2l0aCAiICsgcHJvZHVjdC5pZCk7CiAgICB9LAogICAgbWV0aG9kczogewogICAgICBnZXRBbGxUYXNrcygpewogICAgICAgIGF4aW9zCiAgICAgICAgICAgICAgLmdldCgnaHR0cDovL2xvY2FsaG9zdDo4MDgwL3Rhc2thbGwnKQogICAgICAgICAgICAgIC50aGVuKHJlc3BvbnNlID0+ICh0aGlzLmluZm8gPSByZXNwb25zZS5kYXRhKSkKICAgICAgfSwKICAgICAgZ2V0QWxsVGFzS0J5SWQoaWQsKXsKICAgICAgICAKICAgICAgICB0aGlzLm1vZGFsID0gdHJ1ZTsKICAgICAgICBheGlvcwogICAgICAgIC5nZXQoJ2h0dHA6Ly9sb2NhbGhvc3Q6ODA4MC8vdGFza2J5aWQ/dElkPScgK2lkKQogICAgICAgIC50aGVuKHJlc3BvbnNlID0+ICh0aGlzLmluZm9CeUlkID0gcmVzcG9uc2UuZGF0YSkpCgogICAgICB9LAogICAgCiAgICBkZWxldGVCeUlkKGlkLCBpbmRleCl7CiAgICAgICAgY29uc29sZS5sb2coaW5kZXgpCiAgICAgICAgICAgICAgCiAgICAgICAgYXhpb3MKICAgICAgICAuZGVsZXRlKCdodHRwOi8vbG9jYWxob3N0OjgwODAvZGVsYnlpZD90SWQ9JyAraWQpCiAgICAgICAgCiAgICAgICAgIHRoaXMuaW5mby5zcGxpY2UoaW5kZXgsIDEpCiAgICAgICAgIAogICAgICB9LAogICAgICAgICAgICAKICAgICAgCiAgICB9LAogICAgCgogICAgIG1vdW50ZWQgKCkgewogICAgICAgdGhpcy5nZXRBbGxUYXNrcygpOwogICAgICAgIAogIH0KfQogIAoK"},{"version":3,"sources":["HelloWorld.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;;AAGA;;;AAGA;AACA;;AAEA;AACA","file":"HelloWorld.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\n    <div>\n      \n      <mdb-tbl class=\"table table-responsive table-hover table-borderless table-striped\">\n        <mdb-tbl-head color=\"grey\">\n          <tr>\n            <th scope=\"col\">Task id</th>\n            <th scope=\"col\" >Task Name</th>\n            <th scope=\"col\">Task Time</th>\n            <th scope=\"col\">Task Type</th>\n            <th scope=\"col\">Action</th>\n          </tr>\n        </mdb-tbl-head>\n        <mdb-tbl-body>\n          \n          <tr :style=\"{ cursor: 'pointer'}\" v-for=\"(garnnet, index) in info\" :key=\"index\">\n            \n            <td >{{garnnet.tId}}</td>\n            <td >{{garnnet.taskDesc}}</td>\n            <td >{{garnnet.taskTime}}</td>\n            <td>{{garnnet.taskType}}</td>\n            <td> <mdb-btn v-on:click=\"deleteById(garnnet.tId, index)\" color=\"danger\" ><i class=\"fa fa-trash \"></i></mdb-btn><mdb-btn color=\"primary\" v-on:click=\"getAllTasKById(garnnet.tId)\"><i class=\"fa fa-eye \"></i></mdb-btn> </td>\n          </tr>\n          \n          \n  \n        </mdb-tbl-body>\n      </mdb-tbl>\n      \n\n       \n      <mdb-modal :show=\"modal\" @close=\"modal = false\">\n      <mdb-modal-header>\n      <mdb-modal-title><label>Task Number: {{infoById.tId}}</label></mdb-modal-title>\n      </mdb-modal-header>\n      <mdb-modal-body>\n       \n       \n            \n       \n        <br/>\n       <div> <mdb-btn color=\"transparent\"  rounded>edit</mdb-btn> </div>\n        <label>Task Description : {{infoById.taskDesc}}</label>\n        <input  class=\"form-control form-control-sm\" type=\"text\" > <br/>\n        <label>Task Type :{{infoById.taskType}}</label>\n        <input class=\"form-control form-control-sm\" type=\"text\" ><br/>\n        <label>Task Time :{{infoById.taskTime}}</label>\n        <input class=\"form-control form-control-sm\" type=\"text\" ><br/>\n        <label>Command : {{infoById.cmd}}</label>\n        <input  class=\"form-control form-control-sm\" type=\"text\" ><br/>\n        <label>Status : {{infoById.active}}</label>\n        <input  class=\"form-control form-control-sm\" type=\"text\"><br/>\n        \n        \n\n      </mdb-modal-body>\n      <mdb-modal-footer>\n      \n      <mdb-btn color=\"primary\">Save changes</mdb-btn>\n      </mdb-modal-footer>\n    </mdb-modal>\n\n      \n    </div>\n  </template>\n\n\n<script>\n  import { mdbTbl, mdbTblHead, mdbTblBody, mdbModal, mdbModalHeader, mdbModalTitle, mdbModalBody, mdbModalFooter, mdbBtn } from 'mdbvue';\n\n  export default {\n    name: 'TablePage',\n     data () {\n    return {\n      info: [],\n      infoById:[],\n      modal: false\n    }\n  },\n    components: {\n      mdbTbl,\n      mdbTblHead,\n      mdbTblBody,\n      mdbModal,\n      mdbModalHeader,\n      mdbModalTitle,\n      mdbModalBody,\n      mdbModalFooter,\n      mdbBtn,\n    },\n    clickList: function (product) {\n    console.log(\"clickList fired with \" + product.id);\n    },\n    methods: {\n      getAllTasks(){\n        axios\n              .get('http://localhost:8080/taskall')\n              .then(response => (this.info = response.data))\n      },\n      getAllTasKById(id,){\n        \n        this.modal = true;\n        axios\n        .get('http://localhost:8080//taskbyid?tId=' +id)\n        .then(response => (this.infoById = response.data))\n\n      },\n    \n    deleteById(id, index){\n        console.log(index)\n              \n        axios\n        .delete('http://localhost:8080/delbyid?tId=' +id)\n        \n         this.info.splice(index, 1)\n         \n      },\n            \n      \n    },\n    \n\n     mounted () {\n       this.getAllTasks();\n        \n  }\n}\n  \n\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n</style>\n"]}]}